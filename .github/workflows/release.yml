name: Build .wsl image

on:
  push:
    branches: [release]

defaults:
  run:
    shell: bash

jobs:

  run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Install required packages
        run: sudo apt install shellcheck shunit2

      - name: Make the files in this commit available to the current directory
        uses: actions/checkout@v4
        with:
          path: ./repo/
          
      - name: "Run tests (1/3: add_archive_file.sh)"
        run: ./repo/.github/actions/add_archive_file/test.sh

      - name: "Run tests (2/3: get_ubuntu_images.sh)"
        run: ./repo/.github/actions/get_ubuntu_images/test.sh

      - name: "Run tests (3/3: build.sh)"
        run: ./repo/.github/workflows/test.sh

      - name: Debug output
        if: always()
        uses: ./repo/.github/actions/debug_output

  build_images:
    runs-on: ubuntu-latest
    steps:
      - name: Make the files in this commit available to the current directory
        uses: actions/checkout@v4
        with:
          path: ./repo/

      - name: Build images
        id: build_images
        run: .github/workflows/build.sh
        working-directory: ./repo/
        # creates files in: ./repo/build/

      - name: Pass artifacts to other jobs
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          path: ./repo/build/
          retention-days: 1
        # outputs:
        # artifact-id
        # artifact-url
        # artifact-digest

      - name: Pass image filenames to other jobs
        id: list_images
        run: |
          file_list="$( find $path          \
                        -type f             \
                        -printf '"%f", '    )"
          file_list=${file_list%', '}
          echo "filenames=[$file_list]" >> "$GITHUB_OUTPUT"
        env:
          path: ./repo/build
        # outputs:
        # filenames

      - name: Debug output
        if: always()
        uses: ./repo/.github/actions/debug_output
    outputs:
      artifact_id: ${{ steps.upload_artifact.outputs.artifact-id }}
      filenames: ${{ steps.list_images.outputs.filenames }}

  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # allow workflow to create releases
    steps:
      - name: Create short version of commit SHA-1
        id: truncated_sha
        uses: 2428392/gh-truncate-string-action@v1
        with:
          stringToTruncate: ${{ github.sha }}
          maxLength: 7

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_ID: v0.0.${{ steps.truncated_sha.outputs.string }}
        with:
          tag_name: ${{ env.VERSION_ID }}
          release_name: Release ${{ env.VERSION_ID }}
          draft: false
          prerelease: false
        # outputs:
        # id: The release ID
        # html_url: The URL users can navigate to in order to view the release.
        # upload_url: The URL for uploading assets to the release.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}

  attach_release_files:
    runs-on: ubuntu-latest
    needs:
      - build_images
      - create_release
    permissions:
      contents: write # allow workflow to edit release
    strategy:
      matrix:
        filename: ${{ fromJSON(needs.build_images.outputs.filenames) }}
    steps:
      - name: Make the files in this commit available to the current directory
        uses: actions/checkout@v4
        with:
          path: ./repo/

      - name: Download artifact from build_images
        id: get_artifact
        uses: actions/download-artifact@v4
        with:
          artifact-ids: ${{ needs.build_images.outputs.artifact_id }}
          path: ~/images
        # outputs:
        # download-path

      - name: Upload Release Files
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ format('{0}/artifacts/', steps.get_artifact.outputs.download-path) }}${{ matrix.filename }}
          asset_name: ITSC-3146-Windows-${{ matrix.filename }}
          asset_content_type: application/gzip

      - name: Debug output
        if: always()
        uses: ./repo/.github/actions/debug_output
  
  delete_release_if_fail:
    runs-on: ubuntu-latest
    needs:
      - run_tests
      - build_images
      - create_release
      - attach_release_files
    if: |
      always() &&
      ( contains(needs.*.result, 'failure') || 
        contains(needs.*.result, 'cancelled') )
    permissions:
      contents: write # allow workflow to edit release
    steps:
      - name: Delete Release (if failure occurred)
        uses: liudonghua123/delete-release-action@v1
        with:
          release_id: ${{ needs.create_release.outputs.release_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      upload_url: ${{ needs.create_release.outputs.upload_url }}
