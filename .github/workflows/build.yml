name: Build .wsl image

on:
  push:
    branches: [release]

jobs:

  build_and_release_images:
    runs-on: ubuntu-latest
    permissions:
      contents: write # allow workflow to create releases
    steps:

      - name: Make the files in this commit available to the current directory
        uses: actions/checkout@v4
        with:
          path: ./repo/
          
      - name: Get the base images
        id: get-images
        uses: ./repo/.github/actions/get_ubuntu_images
        # outputs:
        # amd64_path: path to downloaded image
        # arm64_path: path to downloaded image

      - name: "Inject file into archive (1/2: amd64)"
        id: inject-file-amd64
        uses: ./repo/.github/actions/add_archive_file
        with:
          archive-path: ${{ steps.get-images.outputs.amd64_path }}
          is-gzip-compressed: true
          archive-hierarchy-location: ${{ env.CLOUD_CONFIG_DEST_DIR_PATH }}
          file-path: ./repo/${{ env.CLOUD_CONFIG_REPO_FILE_PATH }}

      - name: "Inject file into archive (2/2: arm64)"
        id: inject-file-arm64
        uses: ./repo/.github/actions/add_archive_file
        with:
          archive-path: ${{ steps.get-images.outputs.arm64_path }}
          is-gzip-compressed: true
          archive-hierarchy-location: ${{ env.CLOUD_CONFIG_DEST_DIR_PATH }}
          file-path: ./repo/${{ env.CLOUD_CONFIG_REPO_FILE_PATH }}

      - name: Create short version of commit SHA-1
        id: truncatedSha
        uses: 2428392/gh-truncate-string-action@v1
        with:
          stringToTruncate: ${{ github.sha }}
          maxLength: 7

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_ID: v0.0.${{ steps.truncatedSha.outputs.string }}
        with:
          tag_name: ${{ env.VERSION_ID }}
          release_name: Release ${{ env.VERSION_ID }}
          draft: false
          prerelease: false

      - name: "Upload Release Files (1/2: amd64)"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.inject-file-amd64.outputs.result_archive_path }}
          asset_name: ITSC-3146-Windows-amd64.wsl
          asset_content_type: application/gzip

      - name: "Upload Release Files (2/2: arm64)"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.inject-file-arm64.outputs.result_archive_path }}
          asset_name: ITSC-3146-Windows-arm64.wsl
          asset_content_type: application/gzip

      - name: "Debug output 1/3: ls ./"
        if: always()
        run: |
          # ls -a -R ./ # find can better filter out extraneous dirs
          find . \
            -path './repo/.git' -prune -o \
            -print

      - name: "Debug output 2/3: ls ~/"
        if: always()
        run: |
          # ls -R ~/ # find can better filter out extraneous dirs
          find ~ \
            -path ~/actions-runner -prune -o \
            -path ~/work -prune -o \
            -path ~/.cargo -prune -o \
            -path ~/.rustup -prune -o \
            -path ~/.nvm -prune -o \
            -path ~/.dotnet -prune -o \
            -print
          
      - name: "Debug output 3/3: ls $RUNNER_TEMP"
        if: always()
        run: |
          echo '$RUNNER_TEMP location: '"$RUNNER_TEMP"
          ls $RUNNER_TEMP
          # no need to use find for this directory