get_ubuntu_images:
name: 'Obtain base Ubuntu images'
description: 'From cache or from online'
outputs:
  amd64_path:
    description: 'The path, including name, to the amd64 image.'
    value: ${{ steps.download.outputs.amd64 }}
  arm64_path:
    description: 'The path, including name, to the ARM image.'
    value: ${{ steps.download.outputs.arm64 }}
runs:
  using: "composite"
  steps:
    - name: Download images
      id: download
      shell: bash
      run: |
      script_cmd="${GITHUB_ACTION_PATH}/get_ubuntu_images.sh main"
      declare -A paths="( $(script_cmd) )" # Refer to script for explanation
      echo "amd64=${paths["amd64"]}" | tee -a $GITHUB_OUTPUT
      echo "arm64=${paths["arm64"]}" | tee -a $GITHUB_OUTPUT
      # outputs:
      # amd64: path to downloaded image
      # arm64: path to downloaded image

    - name: Asserts
      shell: bash
      run: |
        ## Asserts
        assert_header='===='
        echo "Checking our output files, at the following paths:"
        echo "amd64 image: $amd64_path"
        echo "ARM image: $arm64_path"

        # Assert we created two files and they are reasonably large
        echo "$assert_header File sizes:"
        echo "$(du -h $amd64_path)"
        echo "$(du -h $arm64_path)"
        
        if [ "$(du --block-size=1M $amd64_path | cut -f1)" -lt 200 ]; then
          echo "Assertion failed: amd64 image size is under 200M" >&2
          exit 1
        fi
        if [ "$(du --block-size=1M $arm64_path | cut -f1)" -lt 200 ]; then
          echo "Assertion failed: ARM image size is under 200M" >&2
          exit 1
        fi
      env:
        # make sure these match the expressions which define the action's output.
        amd64_path: ${{ steps.download.outputs.amd64 }}
        arm64_path: ${{ steps.download.outputs.arm64 }}
